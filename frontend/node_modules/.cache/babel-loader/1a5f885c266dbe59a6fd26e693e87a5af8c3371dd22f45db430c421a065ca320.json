{"ast":null,"code":"var _jsxFileName = \"/Users/pascaldisse/gaia/gaia-code/gaia-manager/frontend/src/components/ActivityLog.js\";\nimport React from 'react';\nimport { FaInfo, FaExclamationTriangle, FaExclamationCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ActivityLog({\n  logs\n}) {\n  // Function to get the appropriate icon based on log level\n  const getLevelIcon = level => {\n    switch (level) {\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(FaExclamationCircle, {\n          className: \"text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 16\n        }, this);\n      case 'warn':\n        return /*#__PURE__*/_jsxDEV(FaExclamationTriangle, {\n          className: \"text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(FaInfo, {\n          className: \"text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Function to get the appropriate text color based on log level\n  const getLevelTextClass = level => {\n    switch (level) {\n      case 'error':\n        return 'text-red-700';\n      case 'warn':\n        return 'text-yellow-700';\n      default:\n        return 'text-gray-700';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-96 overflow-y-auto\",\n    children: [logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-sm mb-2 pb-2 border-b ${getLevelTextClass(log.level)}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex items-center\",\n          children: [getLevelIcon(log.level), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: [\"Agent \", log.agentId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(log.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ml-5\",\n        children: log.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), logs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 italic\",\n      children: \"No activity yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = ActivityLog;\nexport default ActivityLog;\nvar _c;\n$RefreshReg$(_c, \"ActivityLog\");","map":{"version":3,"names":["React","FaInfo","FaExclamationTriangle","FaExclamationCircle","jsxDEV","_jsxDEV","ActivityLog","logs","getLevelIcon","level","className","fileName","_jsxFileName","lineNumber","columnNumber","getLevelTextClass","children","map","log","index","agentId","Date","timestamp","toLocaleTimeString","message","length","_c","$RefreshReg$"],"sources":["/Users/pascaldisse/gaia/gaia-code/gaia-manager/frontend/src/components/ActivityLog.js"],"sourcesContent":["import React from 'react';\nimport { FaInfo, FaExclamationTriangle, FaExclamationCircle } from 'react-icons/fa';\n\nfunction ActivityLog({ logs }) {\n  // Function to get the appropriate icon based on log level\n  const getLevelIcon = (level) => {\n    switch (level) {\n      case 'error':\n        return <FaExclamationCircle className=\"text-red-500\" />;\n      case 'warn':\n        return <FaExclamationTriangle className=\"text-yellow-500\" />;\n      default:\n        return <FaInfo className=\"text-blue-500\" />;\n    }\n  };\n\n  // Function to get the appropriate text color based on log level\n  const getLevelTextClass = (level) => {\n    switch (level) {\n      case 'error':\n        return 'text-red-700';\n      case 'warn':\n        return 'text-yellow-700';\n      default:\n        return 'text-gray-700';\n    }\n  };\n\n  return (\n    <div className=\"h-96 overflow-y-auto\">\n      {logs.map((log, index) => (\n        <div key={index} className={`text-sm mb-2 pb-2 border-b ${getLevelTextClass(log.level)}`}>\n          <div className=\"flex justify-between text-gray-500\">\n            <span className=\"flex items-center\">\n              {getLevelIcon(log.level)}\n              <span className=\"ml-1\">Agent {log.agentId}</span>\n            </span>\n            <span>{new Date(log.timestamp).toLocaleTimeString()}</span>\n          </div>\n          <p className=\"ml-5\">{log.message}</p>\n        </div>\n      ))}\n      {logs.length === 0 && (\n        <p className=\"text-gray-500 italic\">No activity yet</p>\n      )}\n    </div>\n  );\n}\n\nexport default ActivityLog;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,qBAAqB,EAAEC,mBAAmB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpF,SAASC,WAAWA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC7B;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,QAAQA,KAAK;MACX,KAAK,OAAO;QACV,oBAAOJ,OAAA,CAACF,mBAAmB;UAACO,SAAS,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzD,KAAK,MAAM;QACT,oBAAOT,OAAA,CAACH,qBAAqB;UAACQ,SAAS,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC9D;QACE,oBAAOT,OAAA,CAACJ,MAAM;UAACS,SAAS,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIN,KAAK,IAAK;IACnC,QAAQA,KAAK;MACX,KAAK,OAAO;QACV,OAAO,cAAc;MACvB,KAAK,MAAM;QACT,OAAO,iBAAiB;MAC1B;QACE,OAAO,eAAe;IAC1B;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKK,SAAS,EAAC,sBAAsB;IAAAM,QAAA,GAClCT,IAAI,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBd,OAAA;MAAiBK,SAAS,EAAE,8BAA8BK,iBAAiB,CAACG,GAAG,CAACT,KAAK,CAAC,EAAG;MAAAO,QAAA,gBACvFX,OAAA;QAAKK,SAAS,EAAC,oCAAoC;QAAAM,QAAA,gBACjDX,OAAA;UAAMK,SAAS,EAAC,mBAAmB;UAAAM,QAAA,GAChCR,YAAY,CAACU,GAAG,CAACT,KAAK,CAAC,eACxBJ,OAAA;YAAMK,SAAS,EAAC,MAAM;YAAAM,QAAA,GAAC,QAAM,EAACE,GAAG,CAACE,OAAO;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACPT,OAAA;UAAAW,QAAA,EAAO,IAAIK,IAAI,CAACH,GAAG,CAACI,SAAS,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACNT,OAAA;QAAGK,SAAS,EAAC,MAAM;QAAAM,QAAA,EAAEE,GAAG,CAACM;MAAO;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAR7BK,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACN,CAAC,EACDP,IAAI,CAACkB,MAAM,KAAK,CAAC,iBAChBpB,OAAA;MAAGK,SAAS,EAAC,sBAAsB;MAAAM,QAAA,EAAC;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACY,EAAA,GA5CQpB,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}